package SmartFarm.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import jetbrains.mps.smodel.runtime.ConstrainedStringDatatypeDescriptor;
import jetbrains.mps.smodel.runtime.ConstrainedStringDatatypeDescriptorImpl;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAI = createDescriptorForAI();
  /*package*/ final ConceptDescriptor myConceptCamera = createDescriptorForCamera();
  /*package*/ final ConceptDescriptor myConceptCrate = createDescriptorForCrate();
  /*package*/ final ConceptDescriptor myConceptCrop = createDescriptorForCrop();
  /*package*/ final ConceptDescriptor myConceptDrone = createDescriptorForDrone();
  /*package*/ final ConceptDescriptor myConceptFarm = createDescriptorForFarm();
  /*package*/ final ConceptDescriptor myConceptLight = createDescriptorForLight();
  /*package*/ final ConceptDescriptor myConceptSensor = createDescriptorForSensor();
  /*package*/ final ConceptDescriptor myConceptSoil = createDescriptorForSoil();
  /*package*/ final ConceptDescriptor myConceptTemperature = createDescriptorForTemperature();
  /*package*/ final ConceptDescriptor myConceptWater = createDescriptorForWater();
  /*package*/ final EnumerationDescriptor myEnumerationAItype = new EnumerationDescriptor_AItype();
  /*package*/ final EnumerationDescriptor myEnumerationLightType = new EnumerationDescriptor_LightType();
  /*package*/ final ConstrainedStringDatatypeDescriptor myCSDatatypeCrateid = new ConstrainedStringDatatypeDescriptorImpl(0x835d7f18a2604c9dL, 0xa7a7f5480713c93dL, 0x4868eb0de61d2698L, "Crateid", "r:3d8221a8-bf28-472f-a550-7226d0477236(SmartFarm.structure)/5217678613236491928", "[C][1-9][1-9]");
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAI, myConceptCamera, myConceptCrate, myConceptCrop, myConceptDrone, myConceptFarm, myConceptLight, myConceptSensor, myConceptSoil, myConceptTemperature, myConceptWater);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.AI:
        return myConceptAI;
      case LanguageConceptSwitch.Camera:
        return myConceptCamera;
      case LanguageConceptSwitch.Crate:
        return myConceptCrate;
      case LanguageConceptSwitch.Crop:
        return myConceptCrop;
      case LanguageConceptSwitch.Drone:
        return myConceptDrone;
      case LanguageConceptSwitch.Farm:
        return myConceptFarm;
      case LanguageConceptSwitch.Light:
        return myConceptLight;
      case LanguageConceptSwitch.Sensor:
        return myConceptSensor;
      case LanguageConceptSwitch.Soil:
        return myConceptSoil;
      case LanguageConceptSwitch.Temperature:
        return myConceptTemperature;
      case LanguageConceptSwitch.Water:
        return myConceptWater;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationAItype, myEnumerationLightType, myCSDatatypeCrateid);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAI() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SmartFarm", "AI", 0x835d7f18a2604c9dL, 0xa7a7f5480713c93dL, 0x4868eb0de61d7258L);
    b.class_(false, false, false);
    b.origin("r:3d8221a8-bf28-472f-a550-7226d0477236(SmartFarm.structure)/5217678613236511320");
    b.version(2);
    b.property("aitype", 0x4868eb0de61d7259L).type(MetaIdFactory.dataTypeId(0x835d7f18a2604c9dL, 0xa7a7f5480713c93dL, 0x4868eb0de61d725bL)).origin("5217678613236511321").done();
    b.alias("AI");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCamera() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SmartFarm", "Camera", 0x835d7f18a2604c9dL, 0xa7a7f5480713c93dL, 0x4868eb0de61d6acaL);
    b.class_(false, false, false);
    b.origin("r:3d8221a8-bf28-472f-a550-7226d0477236(SmartFarm.structure)/5217678613236509386");
    b.version(2);
    b.property("camerareq", 0x4868eb0de626ed15L).type(PrimitiveTypeId.INTEGER).origin("5217678613237132565").done();
    b.alias("camera");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCrate() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SmartFarm", "Crate", 0x835d7f18a2604c9dL, 0xa7a7f5480713c93dL, 0x4868eb0de61d6acdL);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:3d8221a8-bf28-472f-a550-7226d0477236(SmartFarm.structure)/5217678613236509389");
    b.version(2);
    b.property("id", 0x4868eb0de627f4efL).type(MetaIdFactory.dataTypeId(0x835d7f18a2604c9dL, 0xa7a7f5480713c93dL, 0x4868eb0de61d2698L)).origin("5217678613237200111").done();
    b.aggregate("crop", 0x4868eb0de627f4e4L).target(0x835d7f18a2604c9dL, 0xa7a7f5480713c93dL, 0x4868eb0de61d6aa6L).optional(false).ordered(true).multiple(false).origin("5217678613237200100").done();
    b.aggregate("sensor", 0x4868eb0de627f4e6L).target(0x835d7f18a2604c9dL, 0xa7a7f5480713c93dL, 0x4868eb0de61c82e0L).optional(false).ordered(true).multiple(false).origin("5217678613237200102").done();
    b.aggregate("light", 0x4868eb0de627f4f3L).target(0x835d7f18a2604c9dL, 0xa7a7f5480713c93dL, 0x4868eb0de61d6a92L).optional(true).ordered(true).multiple(true).origin("5217678613237200115").done();
    b.alias("crate");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCrop() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SmartFarm", "Crop", 0x835d7f18a2604c9dL, 0xa7a7f5480713c93dL, 0x4868eb0de61d6aa6L);
    b.class_(false, false, false);
    b.origin("r:3d8221a8-bf28-472f-a550-7226d0477236(SmartFarm.structure)/5217678613236509350");
    b.version(2);
    b.property("croptype", 0x4868eb0de61d6aa7L).type(PrimitiveTypeId.STRING).origin("5217678613236509351").done();
    b.alias("crop");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForDrone() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SmartFarm", "Drone", 0x835d7f18a2604c9dL, 0xa7a7f5480713c93dL, 0x4868eb0de61d6ac7L);
    b.class_(false, false, false);
    b.origin("r:3d8221a8-bf28-472f-a550-7226d0477236(SmartFarm.structure)/5217678613236509383");
    b.version(2);
    b.property("reqnumber", 0x4868eb0de61d6ac8L).type(PrimitiveTypeId.INTEGER).origin("5217678613236509384").done();
    b.alias("drone");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForFarm() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SmartFarm", "Farm", 0x835d7f18a2604c9dL, 0xa7a7f5480713c93dL, 0x4868eb0de61d7269L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:3d8221a8-bf28-472f-a550-7226d0477236(SmartFarm.structure)/5217678613236511337");
    b.version(2);
    b.property("cratesrequired", 0x4868eb0de61ead32L).type(PrimitiveTypeId.INTEGER).origin("5217678613236591922").done();
    b.property("norow", 0x4868eb0de61edcfaL).type(PrimitiveTypeId.INTEGER).origin("5217678613236604154").done();
    b.property("nocol", 0x4868eb0de61edcfdL).type(PrimitiveTypeId.INTEGER).origin("5217678613236604157").done();
    b.aggregate("ai", 0x4868eb0de61d7baaL).target(0x835d7f18a2604c9dL, 0xa7a7f5480713c93dL, 0x4868eb0de61d7258L).optional(true).ordered(true).multiple(true).origin("5217678613236513706").done();
    b.aggregate("camera", 0x4868eb0de61d7bbcL).target(0x835d7f18a2604c9dL, 0xa7a7f5480713c93dL, 0x4868eb0de61d6acaL).optional(false).ordered(true).multiple(false).origin("5217678613236513724").done();
    b.aggregate("drone", 0x4868eb0de61d7bd1L).target(0x835d7f18a2604c9dL, 0xa7a7f5480713c93dL, 0x4868eb0de61d6ac7L).optional(false).ordered(true).multiple(false).origin("5217678613236513745").done();
    b.aggregate("crate", 0x4868eb0de61e608aL).target(0x835d7f18a2604c9dL, 0xa7a7f5480713c93dL, 0x4868eb0de61d6acdL).optional(true).ordered(true).multiple(false).origin("5217678613236572298").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForLight() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SmartFarm", "Light", 0x835d7f18a2604c9dL, 0xa7a7f5480713c93dL, 0x4868eb0de61d6a92L);
    b.class_(false, false, false);
    b.origin("r:3d8221a8-bf28-472f-a550-7226d0477236(SmartFarm.structure)/5217678613236509330");
    b.version(2);
    b.property("lighttype", 0x4868eb0de61d6aa1L).type(MetaIdFactory.dataTypeId(0x835d7f18a2604c9dL, 0xa7a7f5480713c93dL, 0x4868eb0de61d6a93L)).origin("5217678613236509345").done();
    b.alias("light");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSensor() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SmartFarm", "Sensor", 0x835d7f18a2604c9dL, 0xa7a7f5480713c93dL, 0x4868eb0de61c82e0L);
    b.class_(false, false, false);
    b.origin("r:3d8221a8-bf28-472f-a550-7226d0477236(SmartFarm.structure)/5217678613236450016");
    b.version(2);
    b.aggregate("soilsensor", 0x4ba697e934904be2L).target(0x835d7f18a2604c9dL, 0xa7a7f5480713c93dL, 0x4ba697e934904be0L).optional(true).ordered(true).multiple(false).origin("5451211426843610082").done();
    b.aggregate("tempsensor", 0x4ba697e934904be4L).target(0x835d7f18a2604c9dL, 0xa7a7f5480713c93dL, 0x4ba697e934904bdfL).optional(true).ordered(true).multiple(false).origin("5451211426843610084").done();
    b.aggregate("watersensor", 0x4ba697e934904be7L).target(0x835d7f18a2604c9dL, 0xa7a7f5480713c93dL, 0x4ba697e934904be1L).optional(true).ordered(true).multiple(false).origin("5451211426843610087").done();
    b.alias("sensor");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSoil() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SmartFarm", "Soil", 0x835d7f18a2604c9dL, 0xa7a7f5480713c93dL, 0x4ba697e934904be0L);
    b.class_(false, false, false);
    b.super_("SmartFarm.structure.Sensor", 0x835d7f18a2604c9dL, 0xa7a7f5480713c93dL, 0x4868eb0de61c82e0L);
    b.origin("r:3d8221a8-bf28-472f-a550-7226d0477236(SmartFarm.structure)/5451211426843610080");
    b.version(2);
    b.property("type", 0x4ba697e934924cc8L).type(PrimitiveTypeId.STRING).origin("5451211426843741384").done();
    b.property("ph", 0x4ba697e934924ccaL).type(PrimitiveTypeId.BOOLEAN).origin("5451211426843741386").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTemperature() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SmartFarm", "Temperature", 0x835d7f18a2604c9dL, 0xa7a7f5480713c93dL, 0x4ba697e934904bdfL);
    b.class_(false, false, false);
    b.origin("r:3d8221a8-bf28-472f-a550-7226d0477236(SmartFarm.structure)/5451211426843610079");
    b.version(2);
    b.property("DegreeCelcius", 0x4ba697e93490cfc5L).type(PrimitiveTypeId.BOOLEAN).origin("5451211426843643845").done();
    b.property("soiltemp", 0x4ba697e93490cfc7L).type(PrimitiveTypeId.BOOLEAN).origin("5451211426843643847").done();
    b.property("plantstemp", 0x4ba697e93490cfcaL).type(PrimitiveTypeId.BOOLEAN).origin("5451211426843643850").done();
    b.property("airtemp", 0x4ba697e93490cfceL).type(PrimitiveTypeId.BOOLEAN).origin("5451211426843643854").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForWater() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("SmartFarm", "Water", 0x835d7f18a2604c9dL, 0xa7a7f5480713c93dL, 0x4ba697e934904be1L);
    b.class_(false, false, false);
    b.origin("r:3d8221a8-bf28-472f-a550-7226d0477236(SmartFarm.structure)/5451211426843610081");
    b.version(2);
    b.property("soilmoist", 0x4ba697e934924d26L).type(PrimitiveTypeId.BOOLEAN).origin("5451211426843741478").done();
    b.property("airmoist", 0x4ba697e934924d28L).type(PrimitiveTypeId.BOOLEAN).origin("5451211426843741480").done();
    return b.create();
  }
}
